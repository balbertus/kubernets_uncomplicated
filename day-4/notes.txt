###########REPLICASET##################################
$ kubectl get deployment
NAME               READY   UP-TO-DATE   AVAILABLE   AGE
nginx-deployment   1/1     1            1           10s
$ kubectl get replicaset
NAME                          DESIRED   CURRENT   READY   AGE
nginx-deployment-847d96855b   1         1         1       3m45s
$ cat deployment.yaml 
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx-deployment
  name: nginx-deployment
spec:
  replicas: 1 
  selector:
    matchLabels: 
      app: nginx-deployment
  strategy: {}
  template:
    metadata:
      labels: 
        app: nginx-deployment
    spec:
      containers:
      - image: nginx
        name: nginx
        resources:
          limits:
            cpu: "0.5"
            memory: "128Mi"
          requests:
            cpu: "0.3"
            memory: "64Mi"

#######################SCALE REPLICASET###############################################
$ kubectl scale deployment nginx-deployment --replicas=3
deployment.apps/nginx-deployment scaled
$ kubectl get replicaset
NAME                          DESIRED   CURRENT   READY   AGE
nginx-deployment-847d96855b   3         3         3       7m41s
$ kubectl get deployment
NAME               READY   UP-TO-DATE   AVAILABLE   AGE
nginx-deployment   3/3     3            3           7m49s

#######################DESCRIBE####################################################
$ kubectl describe replicaset nginx-deployment-575cffbfc6
Name:           nginx-deployment-575cffbfc6
Namespace:      default
Selector:       app=nginx-deployment,pod-template-hash=575cffbfc6
Labels:         app=nginx-deployment
                pod-template-hash=575cffbfc6
Annotations:    deployment.kubernetes.io/desired-replicas: 3
                deployment.kubernetes.io/max-replicas: 4
                deployment.kubernetes.io/revision: 1
Controlled By:  Deployment/nginx-deployment
Replicas:       3 current / 3 desired
Pods Status:    3 Running / 0 Waiting / 0 Succeeded / 0 Failed
Pod Template:
  Labels:  app=nginx-deployment
           pod-template-hash=575cffbfc6
  Containers:
   nginx:
    Image:      nginx:1.18.0
    Port:       <none>
    Host Port:  <none>
    Limits:
      cpu:     500m
      memory:  128Mi
    Requests:
      cpu:         300m
      memory:      64Mi
    Environment:   <none>
    Mounts:        <none>
  Volumes:         <none>
  Node-Selectors:  <none>
  Tolerations:     <none>
Events:
  Type    Reason            Age   From                   Message
  ----    ------            ----  ----                   -------
  Normal  SuccessfulCreate  63s   replicaset-controller  Created pod: nginx-deployment-575cffbfc6-42wwf
  Normal  SuccessfulCreate  63s   replicaset-controller  Created pod: nginx-deployment-575cffbfc6-2pts5
  Normal  SuccessfulCreate  63s   replicaset-controller  Created pod: nginx-deployment-575cffbfc6-n7d95

################################NEW APP VERSION##########################################################
user1@balbertus-virtual-machine:~/PICK/kubernets_uncomplicated/day-4$ kubectl get replicaset
NAME                          DESIRED   CURRENT   READY   AGE
nginx-deployment-575cffbfc6   3         3         3       2m32s
user1@balbertus-virtual-machine:~/PICK/kubernets_uncomplicated/day-4$ vim deployment.yaml 
user1@balbertus-virtual-machine:~/PICK/kubernets_uncomplicated/day-4$ kubectl apply -f deployment.yaml 
deployment.apps/nginx-deployment configured
user1@balbertus-virtual-machine:~/PICK/kubernets_uncomplicated/day-4$ kubectl get replicaset
NAME                          DESIRED   CURRENT   READY   AGE
nginx-deployment-575cffbfc6   3         3         3       2m55s
nginx-deployment-579d7cd555   1         1         0       3s
user1@balbertus-virtual-machine:~/PICK/kubernets_uncomplicated/day-4$ 

>> SEE the TWO replicasets.... differ by nginx app version

user1@balbertus-virtual-machine:~/PICK/kubernets_uncomplicated/day-4$ kubectl describe replicaset nginx-deployment 
Name:           nginx-deployment-575cffbfc6
Namespace:      default
Selector:       app=nginx-deployment,pod-template-hash=575cffbfc6
Labels:         app=nginx-deployment
                pod-template-hash=575cffbfc6
Annotations:    deployment.kubernetes.io/desired-replicas: 3
                deployment.kubernetes.io/max-replicas: 4
                deployment.kubernetes.io/revision: 1
Controlled By:  Deployment/nginx-deployment
Replicas:       0 current / 0 desired
Pods Status:    0 Running / 0 Waiting / 0 Succeeded / 0 Failed
Pod Template:
  Labels:  app=nginx-deployment
           pod-template-hash=575cffbfc6
  Containers:
   nginx:
    Image:      nginx:1.18.0
    Port:       <none>
    Host Port:  <none>
    Limits:
      cpu:     500m
      memory:  128Mi
    Requests:
      cpu:         300m
      memory:      64Mi
    Environment:   <none>
    Mounts:        <none>
  Volumes:         <none>
  Node-Selectors:  <none>
  Tolerations:     <none>
Events:
  Type    Reason            Age    From                   Message
  ----    ------            ----   ----                   -------
  Normal  SuccessfulCreate  5m15s  replicaset-controller  Created pod: nginx-deployment-575cffbfc6-42wwf
  Normal  SuccessfulCreate  5m15s  replicaset-controller  Created pod: nginx-deployment-575cffbfc6-2pts5
  Normal  SuccessfulCreate  5m15s  replicaset-controller  Created pod: nginx-deployment-575cffbfc6-n7d95
  Normal  SuccessfulDelete  2m10s  replicaset-controller  Deleted pod: nginx-deployment-575cffbfc6-42wwf
  Normal  SuccessfulDelete  117s   replicaset-controller  Deleted pod: nginx-deployment-575cffbfc6-2pts5
  Normal  SuccessfulDelete  115s   replicaset-controller  Deleted pod: nginx-deployment-575cffbfc6-n7d95

Name:           nginx-deployment-579d7cd555
Namespace:      default
Selector:       app=nginx-deployment,pod-template-hash=579d7cd555
Labels:         app=nginx-deployment
                pod-template-hash=579d7cd555
Annotations:    deployment.kubernetes.io/desired-replicas: 3
                deployment.kubernetes.io/max-replicas: 4
                deployment.kubernetes.io/revision: 2
Controlled By:  Deployment/nginx-deployment
Replicas:       3 current / 3 desired
Pods Status:    3 Running / 0 Waiting / 0 Succeeded / 0 Failed
Pod Template:
  Labels:  app=nginx-deployment
           pod-template-hash=579d7cd555
  Containers:
   nginx:
    Image:      nginx:1.19.0
    Port:       <none>
    Host Port:  <none>
    Limits:
      cpu:     500m
      memory:  128Mi
    Requests:
      cpu:         300m
      memory:      64Mi
    Environment:   <none>
    Mounts:        <none>
  Volumes:         <none>
  Node-Selectors:  <none>
  Tolerations:     <none>
Events:
  Type    Reason            Age    From                   Message
  ----    ------            ----   ----                   -------
  Normal  SuccessfulCreate  2m23s  replicaset-controller  Created pod: nginx-deployment-579d7cd555-dgtf7
  Normal  SuccessfulCreate  2m10s  replicaset-controller  Created pod: nginx-deployment-579d7cd555-tw8vz
  Normal  SuccessfulCreate  117s   replicaset-controller  Created pod: nginx-deployment-579d7cd555-f7xsk

user1@balbertus-virtual-machine:~/PICK/kubernets_uncomplicated/day-4$

$ kubectl get replicaset
NAME                          DESIRED   CURRENT   READY   AGE
nginx-deployment-575cffbfc6   0         0         0       8m39s
nginx-deployment-579d7cd555   3         3         3       5m47s

################################DOING A ROLLBACK###########################################################################

user1@balbertus-virtual-machine:~/PICK/kubernets_uncomplicated/day-4$ kubectl rollout undo deployment nginx-deployment
deployment.apps/nginx-deployment rolled back
user1@balbertus-virtual-machine:~/PICK/kubernets_uncomplicated/day-4$ kubectl get replicaset
NAME                          DESIRED   CURRENT   READY   AGE
nginx-deployment-575cffbfc6   2         2         1       9m21s
nginx-deployment-579d7cd555   2         2         2       6m29s
user1@balbertus-virtual-machine:~/PICK/kubernets_uncomplicated/day-4$ kubectl get replicaset
NAME                          DESIRED   CURRENT   READY   AGE
nginx-deployment-575cffbfc6   3         3         3       9m23s
nginx-deployment-579d7cd555   0         0         0       6m31s
user1@balbertus-virtual-machine:~/PICK/kubernets_uncomplicated/day-4$ 

>> THIS IS ONE OF THE FUNCTIONS OF REPLICASET

######################DEAMONSET####################################################################

$ kubectl apply -f node-exporter-daemonset.yaml
daemonset.apps/node-exporter created
$ kubectl get daemonset
NAME            DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE
node-exporter   2         2         0       2            0           <none>          4s

>> Checking pods 

$ kubectl get pods -l app=node-exporter
NAME                  READY   STATUS    RESTARTS   AGE
node-exporter-rqnch   1/1     Running   0          3m55s
node-exporter-zpdd8   1/1     Running   0          3m55s

>>> Check in case its on all nodes of the cluster

$ kubectl get pods -o wide -l app=node-exporter
NAME                  READY   STATUS    RESTARTS   AGE     IP           NODE           NOMINATED NODE   READINESS GATES
node-exporter-rqnch   1/1     Running   0          9m29s   172.18.0.3   kind-worker    <none>           <none>
node-exporter-zpdd8   1/1     Running   0          9m29s   172.18.0.2   kind-worker2   <none>           <none>
user1@balbertus-virtual-machine:~/PICK/kubernets_uncomplicated/day-4$

>> And describe to see all details

$ kubectl describe daemonset node-exporter
Name:           node-exporter
Namespace:      default
Selector:       app=node-exporter
Node-Selector:  <none>
Labels:         <none>
Annotations:    deprecated.daemonset.template.generation: 1
Desired Number of Nodes Scheduled: 2
Current Number of Nodes Scheduled: 2
Number of Nodes Scheduled with Up-to-date Pods: 2
Number of Nodes Scheduled with Available Pods: 2
Number of Nodes Misscheduled: 0
Pods Status:  2 Running / 0 Waiting / 0 Succeeded / 0 Failed
Pod Template:
  Labels:  app=node-exporter
  Containers:
   node-exporter:
    Image:        prom/node-exporter:latest
    Port:         9100/TCP
    Host Port:    9100/TCP
    Environment:  <none>
    Mounts:
      /host/proc from proc (ro)
      /host/sys from sys (ro)
  Volumes:
   proc:
    Type:          HostPath (bare host directory volume)
    Path:          /proc
    HostPathType:  
   sys:
    Type:          HostPath (bare host directory volume)
    Path:          /sys
    HostPathType:  
  Node-Selectors:  <none>
  Tolerations:     <none>
Events:
  Type    Reason            Age   From                  Message
  ----    ------            ----  ----                  -------
  Normal  SuccessfulCreate  11m   daemonset-controller  Created pod: node-exporter-rqnch
  Normal  SuccessfulCreate  11m   daemonset-controller  Created pod: node-exporter-zpdd8
user1@balbertus-virtual-machine:~/PICK/kubernets_uncomplicated/day-4

####################PROBES############################################################
Manifest
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: nginx-liveness-tcp
  name: nginx-liveness-tcp
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx-liveness-tcp
  strategy: {}
  template:
    metadata:
      labels:
        app: nginx-liveness-tcp
    spec:
      containers:
      - image: nginx
        name: nginx
        resources:
          limits:
            cpu: 1
            memory: "256Mi"
          requests:  
            cpu: 0.5
            memory: "128Mi"
        livenessProbe: 
          tcpSocket:
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3


$ kubectl create -f nginx-liveness-tcpSocket.yaml 
deployment.apps/nginx-liveness-tcp created
$ kubectl get deployment
NAME                 READY   UP-TO-DATE   AVAILABLE   AGE
nginx-liveness-tcp   3/3     3            3           16s
$ kubectl get pods
NAME                                  READY   STATUS    RESTARTS   AGE
nginx-liveness-tcp-6b77dbc457-fpvfj   1/1     Running   0          24s
nginx-liveness-tcp-6b77dbc457-jf4nm   1/1     Running   0          24s
nginx-liveness-tcp-6b77dbc457-qclwm   1/1     Running   0          24s
$ kubectl describe pods nginx-liveness-tcp-6b77dbc457-fpvfj
Name:             nginx-liveness-tcp-6b77dbc457-fpvfj

    Liveness:     tcp-socket :80 delay=10s timeout=5s period=10s #success=1 #failure=3
    Environment:  <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-xndb4 (ro)
Conditions:
  Type                        Status
  PodReadyToStartContainers   True 
  Initialized                 True 
  Ready                       True 
  ContainersReady             True 
  PodScheduled                True 

Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  46s   default-scheduler  Successfully assigned default/nginx-liveness-tcp-6b77dbc457-fpvfj to kind-worker
  Normal  Pulling    45s   kubelet            Pulling image "nginx"
  Normal  Pulled     43s   kubelet            Successfully pulled image "nginx" in 1.425s (1.425s including waiting). Image size: 72223778 bytes.
  Normal  Created    43s   kubelet            Created container: nginx
  Normal  Started    43s   kubelet            Started container nginx

>> In case of failure as EXAMPLE port is differ of 80 
$ kubectl apply -f nginx-liveness-tcpSocket.yaml 
Warning: resource deployments/nginx-liveness-tcp is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.
deployment.apps/nginx-liveness-tcp configured

The previous POD is Recreated
$ kubectl describe pods nginx-liveness-tcp-6b77dbc457-fpvfj
Error from server (NotFound): pods "nginx-liveness-tcp-6b77dbc457-fpvfj" not found
$ kubectl describe pods 
Liveness:     tcp-socket :81 delay=10s timeout=5s period=10s #success=1 #failure=3

Warning  Unhealthy  5s    kubelet            Liveness probe failed: dial tcp 10.244.1.9:81: connect: connection refused

POD restating State instead Running
$ kubectl get pods 
NAME                                  READY   STATUS    RESTARTS      AGE
nginx-liveness-tcp-7c8d9767c8-f9fgs   1/1     Running   4 (35s ago)   3m16s
nginx-liveness-tcp-7c8d9767c8-k684m   1/1     Running   4 (42s ago)   3m22s
nginx-liveness-tcp-7c8d9767c8-rcps6   1/1     Running   4 (38s ago)   3m19s

>>> TRYING WITH httpGet

kubectl get deployment
NAME                 READY   UP-TO-DATE   AVAILABLE   AGE
nginx-liveness-tcp   3/3     3            3           11s
$ kubectl get pods
NAME                                  READY   STATUS    RESTARTS   AGE
nginx-liveness-tcp-8469976899-884rb   1/1     Running   0          15s
nginx-liveness-tcp-8469976899-d9nn5   1/1     Running   0          16s
nginx-liveness-tcp-8469976899-kghbt   1/1     Running   0          15s
$ kubectl describe pods nginx-liveness-tcp-8469976899-884rb

    Liveness:     http-get http://:80/ delay=10s timeout=5s period=10s #success=1 #failure=3

Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  39s   default-scheduler  Successfully assigned default/nginx-liveness-tcp-8469976899-884rb to kind-worker2
  Normal  Pulling    38s   kubelet            Pulling image "nginx"
  Normal  Pulled     36s   kubelet            Successfully pulled image "nginx" in 1.543s (2.916s including waiting). Image size: 72223778 bytes.
  Normal  Created    36s   kubelet            Created container: nginx
  Normal  Started    35s   kubelet            Started container nginx

>>>  In case of Failure as a differ endpoint

$ kubectl describe pods nginx-liveness-http-fc5677498-kf9qj

    Liveness:     http-get http://:80/balbertus delay=10s timeout=5s period=10s #success=1 #failure=3

Events:
  Type     Reason     Age               From               Message
  ----     ------     ----              ----               -------
  Normal   Scheduled  49s               default-scheduler  Successfully assigned default/nginx-liveness-http-fc5677498-kf9qj to kind-worker
  Normal   Pulled     46s               kubelet            Successfully pulled image "nginx" in 1.411s (2.529s including waiting). Image size: 72223778 bytes.
  Normal   Pulling    9s (x2 over 49s)  kubelet            Pulling image "nginx"
  Warning  Unhealthy  9s (x3 over 29s)  kubelet            Liveness probe failed: HTTP probe failed with statuscode: 404
  Normal   Killing    9s                kubelet            Container nginx failed liveness probe, will be restarted
  Normal   Created    6s (x2 over 46s)  kubelet            Created container: nginx
  Normal   Started    6s (x2 over 46s)  kubelet            Started container nginx
  Normal   Pulled     6s                kubelet            Successfully pulled image "nginx" in 1.406s (2.981s including waiting). Image size: 72223778 bytes.
user1@balbertus-virtual-machine:~/PICK/kubernets_uncomplicated/day-4$

######################################################################3
ReadinessProbe

...
 readinessProbe: 
          exec:
            command: 
            - curl
            - f
            - http://localhost:80/  
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1

user1@balbertus-virtual-machine:~/PICK/kubernets_uncomplicated/day-4$ kubectl get pods
NAME                                   READY   STATUS    RESTARTS   AGE
nginx-liveness-http-fc5677498-ggjhl    0/1     Pending   0          18s
nginx-liveness-http-fc5677498-h8dct    0/1     Pending   0          27s
nginx-liveness-http-fc5677498-ktwh2    0/1     Pending   0          9s
nginx-liveness-tcp-5788ffdddb-26p59    1/1     Running   0          7m15s
nginx-liveness-tcp-5788ffdddb-h75xq    1/1     Running   0          15m
nginx-liveness-tcp-5788ffdddb-wpfnl    1/1     Running   0          6m50s
nginx-readiness-tcp-768d48b85f-fmhv2   1/1     Running   0          3m57s
nginx-readiness-tcp-768d48b85f-h7qrs   0/1     Running   0          3m57s
nginx-readiness-tcp-768d48b85f-mhtmf   1/1     Running   0          3m57s

See on describe output

.....
    Liveness:     tcp-socket :80 delay=10s timeout=5s period=10s #success=1 #failure=3
    Readiness:    exec [curl f http://localhost:80/] delay=10s timeout=5s period=10s #success=1 #failure=3
    Environment:  <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-ktrgw (ro)
Conditions:
  Type                        Status
  PodReadyToStartContainers   True 
  Initialized                 True 
  Ready                       True 
  ContainersReady             True 
  PodScheduled                True 
Volumes:
  kube-api-access-ktrgw:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    Optional:                false
    DownwardAPI:             true
QoS Class:                   Burstable
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason            Age    From               Message
  ----     ------            ----   ----               -------
  Warning  FailedScheduling  4m25s  default-scheduler  0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 Insufficient cpu. preemption: 0/3 nodes are available: 1 Preemption is not helpful for scheduling, 2 No preemption victims found for incoming pod.
  Normal   Scheduled         54s    default-scheduler  Successfully assigned default/nginx-readiness-tcp-768d48b85f-mhtmf to kind-worker2
  Normal   Pulling           54s    kubelet            Pulling image "nginx"
  Normal   Pulled            52s    kubelet            Successfully pulled image "nginx" in 1.576s (1.576s including waiting). Image size: 72223946 bytes.
  Normal   Created           52s    kubelet            Created container: nginx
  Normal   Started           52s    kubelet            Started container nginx

#############################
Startup probe
......
startupProbe: 
          httpGet: # 'lveness Probe by httpGet'
            path: / #'It is the endpoint to be used'
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1

.....
    Liveness:     tcp-socket :80 delay=10s timeout=5s period=10s #success=1 #failure=3
    Readiness:    exec [curl f http://localhost:80/] delay=10s timeout=5s period=10s #success=1 #failure=3
    Startup:      http-get http://:80/ delay=10s timeout=5s period=10s #success=1 #failure=3
    Environment:  <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-8lphz (ro)
Conditions:
  Type                        Status
  PodReadyToStartContainers   True 
  Initialized                 True 
  Ready                       True 
  ContainersReady             True 
  PodScheduled                True 
Volumes:
  kube-api-access-8lphz:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    Optional:                false
    DownwardAPI:             true
QoS Class:                   Burstable
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason            Age    From               Message
  ----     ------            ----   ----               -------
  Warning  FailedScheduling  2m46s  default-scheduler  0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 Insufficient cpu. preemption: 0/3 nodes are available: 1 Preemption is not helpful for scheduling, 2 No preemption victims found for incoming pod.
  Normal   Scheduled         53s    default-scheduler  Successfully assigned default/nginx-startup-http-6566599478-4hrrd to kind-worker2
  Normal   Pulling           53s    kubelet            Pulling image "nginx"
  Normal   Pulled            52s    kubelet            Successfully pulled image "nginx" in 1.6s (1.6s including waiting). Image size: 72223946 bytes.
  Normal   Created           51s    kubelet            Created container: nginx
  Normal   Started           51s    kubelet            Started container nginx
